//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Segundo_Laboratorio.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCiudades", ReplyAction="http://tempuri.org/IService1/getCiudadesResponse")]
        string[] getCiudades();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCiudades", ReplyAction="http://tempuri.org/IService1/getCiudadesResponse")]
        System.Threading.Tasks.Task<string[]> getCiudadesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarAlumno", ReplyAction="http://tempuri.org/IService1/InsertarAlumnoResponse")]
        void InsertarAlumno(string nom, string ape, string sex, string ema, string dir, string ciu, string req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarAlumno", ReplyAction="http://tempuri.org/IService1/InsertarAlumnoResponse")]
        System.Threading.Tasks.Task InsertarAlumnoAsync(string nom, string ape, string sex, string ema, string dir, string ciu, string req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificarNombre", ReplyAction="http://tempuri.org/IService1/VerificarNombreResponse")]
        bool VerificarNombre(string nom, string ape);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificarNombre", ReplyAction="http://tempuri.org/IService1/VerificarNombreResponse")]
        System.Threading.Tasks.Task<bool> VerificarNombreAsync(string nom, string ape);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Segundo_Laboratorio.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Segundo_Laboratorio.ServiceReference1.IService1>, Segundo_Laboratorio.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] getCiudades() {
            return base.Channel.getCiudades();
        }
        
        public System.Threading.Tasks.Task<string[]> getCiudadesAsync() {
            return base.Channel.getCiudadesAsync();
        }
        
        public void InsertarAlumno(string nom, string ape, string sex, string ema, string dir, string ciu, string req) {
            base.Channel.InsertarAlumno(nom, ape, sex, ema, dir, ciu, req);
        }
        
        public System.Threading.Tasks.Task InsertarAlumnoAsync(string nom, string ape, string sex, string ema, string dir, string ciu, string req) {
            return base.Channel.InsertarAlumnoAsync(nom, ape, sex, ema, dir, ciu, req);
        }
        
        public bool VerificarNombre(string nom, string ape) {
            return base.Channel.VerificarNombre(nom, ape);
        }
        
        public System.Threading.Tasks.Task<bool> VerificarNombreAsync(string nom, string ape) {
            return base.Channel.VerificarNombreAsync(nom, ape);
        }
    }
}
